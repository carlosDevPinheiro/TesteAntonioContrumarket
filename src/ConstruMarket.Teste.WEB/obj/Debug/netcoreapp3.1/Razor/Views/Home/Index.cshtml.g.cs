#pragma checksum "C:\Dev\GitHub\TesteConstrumarket\ConstruMarket.Teste\src\ConstruMarket.Teste.WEB\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bd2b407740d62903dc77201051cfe09f1293fdb2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Dev\GitHub\TesteConstrumarket\ConstruMarket.Teste\src\ConstruMarket.Teste.WEB\Views\_ViewImports.cshtml"
using ConstruMarket.Teste.WEB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Dev\GitHub\TesteConstrumarket\ConstruMarket.Teste\src\ConstruMarket.Teste.WEB\Views\_ViewImports.cshtml"
using ConstruMarket.Teste.WEB.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bd2b407740d62903dc77201051cfe09f1293fdb2", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"83dfe0b9342bff3b43bc96d76b761417061c4179", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Dev\GitHub\TesteConstrumarket\ConstruMarket.Teste\src\ConstruMarket.Teste.WEB\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <button class=""btn btn-primary"" id=""teste""> Obter Produtos </button>
</div>
<br/>

<div>
    <table class=""table table-hover"" id=""minhaTabela"" style=""padding-top: 2%"">
        <thead>
        <tr>
            <th><input type=""text"" id=""filtro""  class=""form-control"" /></th>
            
        </tr>
        <tr>
            <th scope=""col"">Id</th>
            <th scope=""col"">Nome Produto</th>
            <th scope=""col"">Preco</th>
            <th scope=""col"">Marca</th>
        </tr>
        </thead>
        <tbody id=""taelaBody"">
        </tbody>
    </table>
</div>



");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>


        $(function() {

            $(""#minhaTabela input"").keyup(function () {

                if ($(""#minhaTabela input"").val().length > 2) {

                    var index = $(this).parent().index();
                    var nth = ""#minhaTabela td:nth-child(""+(index+2).toString()+"")"";
                    var valor = $(this).val().toUpperCase();
                    $(""#minhaTabela tbody tr"").show();
                    $(nth).each(function(){
                        if($(this).text().toUpperCase().indexOf(valor) < 0){
                            $(this).parent().hide();
                        }
                    });
                }

                
            });
 
            $(""#minhaTabela input"").blur(function(){
                $(this).val("""");
            });
        });


        $('#teste').click(function() {

            obterProduto();

        });

        function popularTabela(lista) {

            var table = $(""#taelaBody"");


  ");
                WriteLiteral(@"          $.each(lista,
                function(key, value) {

                    var tr = $(""<tr>"").append(""<td>"" + value.produtoId + ""</td><td class='mostrar'>"" + value.nome + ""</td><td>"" + value.preco.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) + ""</td>"" + ""<td>""+ value.marca+""</td>"");;

                    table.append(tr);
                });
        }

        function obterProduto() {
            var lista = null;
           
            $.ajax({
                url: ""https://localhost:44354/Produto"",
                type: ""GET""


            }).done(function(resposta) {
               
                lista = resposta;
                popularTabela(lista);

            }).fail(function(jqXHR, textStatus) {
                console.log(""Request failed: "" + textStatus);
                alert(""NÃ£o foi possivel consutar a api erro:  "" + textStatus);

            }).always(function() {
                console.log(""completou"");
            });

        }
");
                WriteLiteral("\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
